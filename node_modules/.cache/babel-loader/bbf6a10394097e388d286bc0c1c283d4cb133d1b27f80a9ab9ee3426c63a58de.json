{"ast":null,"code":"import { ref } from 'vue';\nimport { useField, useForm } from 'vee-validate';\nexport default {\n  setup() {\n    const {\n      handleSubmit,\n      handleReset\n    } = useForm({\n      validationSchema: {\n        name(value) {\n          if (value?.length >= 2) return true;\n          return 'Name needs to be at least 2 characters.';\n        },\n        phone(value) {\n          if (value?.length > 9 && /[0-9-]+/.test(value)) return true;\n          return 'Phone number needs to be at least 9 digits.';\n        },\n        email(value) {\n          if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true;\n          return 'Must be a valid e-mail.';\n        },\n        select(value) {\n          if (value) return true;\n          return 'Select an item.';\n        },\n        checkbox(value) {\n          if (value === '1') return true;\n          return 'Must be checked.';\n        }\n      }\n    });\n    const name = useField('name');\n    const phone = useField('phone');\n    const email = useField('email');\n    const select = useField('select');\n    const checkbox = useField('checkbox');\n    const items = ref(['Item 1', 'Item 2', 'Item 3', 'Item 4']);\n    const submit = handleSubmit(values => {\n      alert(JSON.stringify(values, null, 2));\n    });\n    return {\n      name,\n      phone,\n      email,\n      select,\n      checkbox,\n      items,\n      submit,\n      handleReset\n    };\n  }\n};","map":{"version":3,"names":["ref","useField","useForm","setup","handleSubmit","handleReset","validationSchema","name","value","length","phone","test","email","select","checkbox","items","submit","values","alert","JSON","stringify"],"sources":["C:\\Users\\oscar\\Desktop\\Proyecto_vue_2\\client_project\\src\\components\\ContactCom.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"submit\">\r\n      <v-text-field\r\n        v-model=\"name.value.value\"\r\n        :counter=\"10\"\r\n        :error-messages=\"name.errorMessage.value\"\r\n        label=\"Name\"\r\n      ></v-text-field>\r\n  \r\n      <v-text-field\r\n        v-model=\"phone.value.value\"\r\n        :counter=\"7\"\r\n        :error-messages=\"phone.errorMessage.value\"\r\n        label=\"Phone Number\"\r\n      ></v-text-field>\r\n  \r\n      <v-text-field\r\n        v-model=\"email.value.value\"\r\n        :error-messages=\"email.errorMessage.value\"\r\n        label=\"E-mail\"\r\n      ></v-text-field>\r\n  \r\n      <v-select\r\n        v-model=\"select.value.value\"\r\n        :items=\"items\"\r\n        :error-messages=\"select.errorMessage.value\"\r\n        label=\"Select\"\r\n      ></v-select>\r\n  \r\n      <v-checkbox\r\n        v-model=\"checkbox.value.value\"\r\n        :error-messages=\"checkbox.errorMessage.value\"\r\n        value=\"1\"\r\n        label=\"Option\"\r\n        type=\"checkbox\"\r\n      ></v-checkbox>\r\n  \r\n      <v-btn\r\n        class=\"me-4\"\r\n        type=\"submit\"\r\n      >\r\n        submit\r\n      </v-btn>\r\n  \r\n      <v-btn @click=\"handleReset\">\r\n        clear\r\n      </v-btn>\r\n    </form>\r\n  </template>\r\n  \r\n  <script>\r\n    import { ref } from 'vue'\r\n    import { useField, useForm } from 'vee-validate'\r\n  \r\n    export default {\r\n      setup () {\r\n        const { handleSubmit, handleReset } = useForm({\r\n          validationSchema: {\r\n            name (value) {\r\n              if (value?.length >= 2) return true\r\n  \r\n              return 'Name needs to be at least 2 characters.'\r\n            },\r\n            phone (value) {\r\n              if (value?.length > 9 && /[0-9-]+/.test(value)) return true\r\n  \r\n              return 'Phone number needs to be at least 9 digits.'\r\n            },\r\n            email (value) {\r\n              if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true\r\n  \r\n              return 'Must be a valid e-mail.'\r\n            },\r\n            select (value) {\r\n              if (value) return true\r\n  \r\n              return 'Select an item.'\r\n            },\r\n            checkbox (value) {\r\n              if (value === '1') return true\r\n  \r\n              return 'Must be checked.'\r\n            },\r\n          },\r\n        })\r\n        const name = useField('name')\r\n        const phone = useField('phone')\r\n        const email = useField('email')\r\n        const select = useField('select')\r\n        const checkbox = useField('checkbox')\r\n  \r\n        const items = ref([\r\n          'Item 1',\r\n          'Item 2',\r\n          'Item 3',\r\n          'Item 4',\r\n        ])\r\n  \r\n        const submit = handleSubmit(values => {\r\n          alert(JSON.stringify(values, null, 2))\r\n        })\r\n  \r\n        return { name, phone, email, select, checkbox, items, submit, handleReset }\r\n      },\r\n    }\r\n  </script>\r\n  \r\n  <codepen-resources lang=\"json\">\r\n    {\r\n      \"js\": [\"https://cdn.jsdelivr.net/npm/vee-validate@4.x/dist/vee-validate.js\"]\r\n    }\r\n  </codepen-resources>"],"mappings":"AAmDI,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,QAAQ,EAAEC,OAAM,QAAS,cAAa;AAE/C,eAAe;EACbC,KAAIA,CAAA,EAAK;IACP,MAAM;MAAEC,YAAY;MAAEC;IAAY,IAAIH,OAAO,CAAC;MAC5CI,gBAAgB,EAAE;QAChBC,IAAGA,CAAGC,KAAK,EAAE;UACX,IAAIA,KAAK,EAAEC,MAAK,IAAK,CAAC,EAAE,OAAO,IAAG;UAElC,OAAO,yCAAwC;QACjD,CAAC;QACDC,KAAIA,CAAGF,KAAK,EAAE;UACZ,IAAIA,KAAK,EAAEC,MAAK,GAAI,KAAK,SAAS,CAACE,IAAI,CAACH,KAAK,CAAC,EAAE,OAAO,IAAG;UAE1D,OAAO,6CAA4C;QACrD,CAAC;QACDI,KAAIA,CAAGJ,KAAK,EAAE;UACZ,IAAI,8BAA8B,CAACG,IAAI,CAACH,KAAK,CAAC,EAAE,OAAO,IAAG;UAE1D,OAAO,yBAAwB;QACjC,CAAC;QACDK,MAAKA,CAAGL,KAAK,EAAE;UACb,IAAIA,KAAK,EAAE,OAAO,IAAG;UAErB,OAAO,iBAAgB;QACzB,CAAC;QACDM,QAAOA,CAAGN,KAAK,EAAE;UACf,IAAIA,KAAI,KAAM,GAAG,EAAE,OAAO,IAAG;UAE7B,OAAO,kBAAiB;QAC1B;MACF;IACF,CAAC;IACD,MAAMD,IAAG,GAAIN,QAAQ,CAAC,MAAM;IAC5B,MAAMS,KAAI,GAAIT,QAAQ,CAAC,OAAO;IAC9B,MAAMW,KAAI,GAAIX,QAAQ,CAAC,OAAO;IAC9B,MAAMY,MAAK,GAAIZ,QAAQ,CAAC,QAAQ;IAChC,MAAMa,QAAO,GAAIb,QAAQ,CAAC,UAAU;IAEpC,MAAMc,KAAI,GAAIf,GAAG,CAAC,CAChB,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,CACT;IAED,MAAMgB,MAAK,GAAIZ,YAAY,CAACa,MAAK,IAAK;MACpCC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,OAAO;MAAEV,IAAI;MAAEG,KAAK;MAAEE,KAAK;MAAEC,MAAM;MAAEC,QAAQ;MAAEC,KAAK;MAAEC,MAAM;MAAEX;IAAY;EAC5E;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}